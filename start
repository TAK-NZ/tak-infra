#!/bin/bash
#
# Build CoreConfig & Associated Cert Generation
#

. $NVM_DIR/nvm.sh

set -x
set -euo pipefail

# Copy EFS Persisted certs to Let's Encrypt Dir
if [ -d "/opt/tak/certs/${HostedDomain}" ]; then
    mkdir -p "/etc/letsencrypt/live/${HostedDomain}"
    ls /opt/tak/certs/
    ls /opt/tak/certs/${HostedDomain}/
    cp "/opt/tak/certs/${HostedDomain}/"* "/etc/letsencrypt/live/${HostedDomain}"
fi;

# If no LetsEncrypt certs are present - generate a set
if [ ! -d "/etc/letsencrypt/live/${HostedDomain}" ]; then
    echo "No Certificates detected - $(ls /etc/letsencrypt/live/)"

    #TODO Remove Test Cert
    Command="certbot certonly -v --test-cert --standalone -d ${HostedDomain} --email ${HostedEmail} --non-interactive --agree-tos"

    while ! $Command; do
        echo "Command failed, retrying in 10 seconds..."
        sleep 10
    done

    /opt/tak/certs/cert-metadata.sh

    mkdir -p "/opt/tak/certs/${HostedDomain}/"

    openssl x509 \
        -text \
        -in "/etc/letsencrypt/live/${HostedDomain}/fullchain.pem" \
        -noout

    openssl pkcs12 \
        -export \
        -in "/etc/letsencrypt/live/${HostedDomain}/fullchain.pem" \
        -inkey "/etc/letsencrypt/live/${HostedDomain}/privkey.pem" \
        -out "/opt/tak/certs/${HostedDomain}/letsencrypt.p12" \
        -name "${HostedDomain}" \
        -password "pass:atakatak"
fi

if [ ! -f "/opt/tak/certs/${HostedDomain}/letsencrypt.jks" ]; then
    cp "/etc/letsencrypt/live/${HostedDomain}/"* "/opt/tak/certs/${HostedDomain}/"

    keytool \
        -importkeystore \
        -srcstorepass "atakatak" \
        -deststorepass "atakatak" \
        -destkeystore "/opt/tak/certs/${HostedDomain}/letsencrypt.jks" \
        -srckeystore "/opt/tak/certs/${HostedDomain}/letsencrypt.p12" \
        -srcstoretype "pkcs12"

    /opt/tak/certs/makeCert.sh "server"
fi

if [ ! -f "/opt/tak/certs/files/ca.pem" ]; then
    /opt/tak/certs/makeRootCa.sh
fi

node --version
node CoreConfig.js
mv ./CoreConfig.xml /opt/tak/CoreConfig.xml

java -jar /opt/tak/db-utils/SchemaManager.jar upgrade

/opt/tak/configureInDocker.sh init

